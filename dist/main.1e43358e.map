{"version":3,"sources":["src/models/abstract/data/Store.js","src/lib/Utils.js","src/models/abstract/Model.js","src/models/Todo.js","src/components/UIUtility.js","src/components/UI.js","src/lib/Errors.js","src/lib/Validation.js","src/controllers/Actions.js","src/main.js"],"names":["Store","db","JSON","parse","localStorage","getItem","getTodos","anyData","dbInit","saveData","data","setItem","stringify","_id","Math","floor","random","id","title","completed","undefined","todos","save","isEmpty","field","trim","length","isLessThan","mergeObjs","objArr","newObj","newArr","filter","obj","sortData","sort","a","b","localeCompare","setCheckboxAttrs","status","checked","prop","hasOwnProperty","setAttribute","removeAttribute","setTableRowAttrs","Model","item","storeState","push","newTitleText","todo","updateStore","_todo","newStore","remainingTodos","Todo","UIUtility","checkAllFlag","element","flag","UI","all","appHook","document","getElementById","table","createElement","iniFooter","preText","p","innerHTML","appendChild","map","showTodo","resetFlag","tr","td","td1","td2","input","span","btn","prepend","el","classList","contains","toggleCompleted","value","parentElement","toggle","prompt","editTitle","delete","remove","tableRows","querySelector","childNodes","checkBoxes","querySelectorAll","update","checkAllElem","itemCount","instruction","instructionNote","todoCount","resetCheckAll","errorArray","console","log","alerts","ul","forEach","error","li","setTimeout","Errors","errors","errMsg","Validation","rules","valid","rule","index","callbacks","split","callback","fieldName","Object","keys","lessThan","_name","set","empty","todoSubmit","_input","addEventListener","e","name","newTodo","validate","renderErrors","get","todoList","toggleTodo","target","editTodo","removeTodo","checkAll","tickAll","window","showTodos"],"mappings":"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","file":"main.1e43358e.map","sourceRoot":"..","sourcesContent":["const Store = (function() {\n\n    const db =  JSON.parse(localStorage.getItem(\"_todos\")); \n\n    const getTodos = () => {\n        \n        if(anyData(db)==false) \n        {\n            dbInit();\n        } \n        return db;\n    };\n\n    const saveData = (data) => {\n        localStorage.setItem(\"_todos\", JSON.stringify(data));\n    };\n\n    const dbInit = () => {\n        const _id = Math.floor(Math.random() * 100);\n        const data = [\n            { id: _id, title: \"You're up & running!\", completed: false }\n        ];\n        saveData(data);\n    };\n\n    const anyData = (data) => {\n        return (data==null || data==undefined) ? false : true;\n    };\n\n    return {\n        todos: getTodos,\n        save: saveData\n    };\n}());\n\nexport default Store;\n\n","/**\n * check if field value is empty or not\n * @param {*} field \n * returns @bool true/false\n */\nconst isEmpty = (field=null) => {\n    return (field ===null || field.trim().length===0 || field ===false ) ? true : false;\n};\n\n/**\n * checks if field has characters less or equal to 5:\n * a minimum required for any input field\n * @param {*} field \n * returns @bool true/false\n */\nconst isLessThan = (field=null) => {\n    return (field.length <= 5) ? true : false;\n};\n\nconst mergeObjs = (objArr, newObj) => {\n    let newArr = objArr.filter(obj => obj.id !== newObj[0].id);\n    return [...newArr, newObj[0]];\n};\n\nconst sortData = (data) => {\n    return data.sort( (a, b) => a.title.localeCompare(b.title) );\n};\n\nconst setCheckboxAttrs = (obj, status, checked) => {\n    \n    for(let prop in obj)\n    {\n        if (obj.hasOwnProperty(prop))\n        { \n            if(status===true) \n            {\n                obj[prop].setAttribute('checked', checked);\n            }\n            else \n            {\n                obj[prop].removeAttribute('checked');\n            }\n        }\n    }\n};\n\nconst setTableRowAttrs = (obj, status) => {\n    \n    for(let prop in obj)\n    {\n        if (obj.hasOwnProperty(prop))\n        { \n            obj[prop].setAttribute('class', status);\n        }\n    }\n};\n\n\nexport { isEmpty, isLessThan, mergeObjs, sortData, setTableRowAttrs, setCheckboxAttrs };","import Store from './data/Store';\nimport { mergeObjs } from '../../lib/Utils'\n\n/**\n * Handles all CRUD tasks\n * Abstracts methods for child models \n * thru inheritance (all models inherit from Model class)\n */\nexport default class Model \n{\n    constructor(title)\n    {\n        this.title = title;\n        this.todos = Store.todos();\n    }\n\n    // returns all todos\n    all() \n    {\n        return this.todos;\n    }\n\n    get(id)\n    {\n        return this.todos.filter(item => item.id == id );\n    }\n\n    /**\n     * invokes storeState method which engages \n     * persistence storage when saving NEW todo\n     */\n    save()\n    {\n        this.storeState();\n    }\n\n    update(data)\n    {\n        Store.save(data);\n    }\n\n    storeState() \n    {\n        this.todos.push({\n            id: Math.floor(Math.random() * 100),\n            title: this.title,\n            completed: false\n        });\n        \n        Store.save(this.todos);\n    }\n\n    editTitle(id, newTitleText) \n    {\n        let todo = this.todos.filter(item => item.id == id );\n        todo[0].title = newTitleText;\n        this.updateStore(todo);\n    }\n\n    updateStore(_todo)\n    {\n        // update - merge data and save it to store\n        const newStore = mergeObjs(this.todos, _todo);\n        Store.save(newStore);\n    }\n\n    toggleCompleted(id)\n    {\n        let todo = this.todos.filter(item => item.id == id );\n        todo[0].completed = !todo[0].completed;\n        this.updateStore(todo);\n    }\n\n    delete(_id) \n    {\n        const remainingTodos = this.todos.filter( todo => todo.id != _id );\n        Store.save(remainingTodos);\n    }\n}\n\n","import Model  from './abstract/Model';\n\n/**\n * Extends model abstract\n * initializes instance properties\n */\nexport default class Todo extends Model \n{\n\tconstructor(title = null) \n\t{\n\t\tsuper(title);\n\t}\n}\n","\nexport default class UIUtility \n{\n    constructor()\n    {\n        // checkall flag\n        UIUtility.checkAllFlag = true;\n        UIUtility.checkAllFlag = true;\n    }\n\n    static sortData(data)\n    {\n        return data.sort( (a, b) => a.title.localeCompare(b.title) );\n    }\n\n    static resetCheckAll(element, flag)\n    {\n        if(flag === true) {\n\t\t\telement.setAttribute('checked', true) \n\t\t} else {\n\t\t\telement.removeAttribute('checked') \n\t\t}\n    }\n    \n    static resetFlag(todo)\n\t{\n\t\tif(todo.completed === false)\n\t\t{\n\t\t\tUIUtility.checkAllFlag = false;\n\t\t} \n    }\n    \n    static setCheckboxAttrs(obj, status, checked) \n    {\n        for(let prop in obj)\n        {\n            if (obj.hasOwnProperty(prop))\n            { \n                if(status===true) \n                {\n                    obj[prop].setAttribute('checked', checked);\n                }\n                else \n                {\n                    obj[prop].removeAttribute('checked');\n                }\n            }\n        }\n    }\n    \n    static setTableRowAttrs(obj, status)\n    {\n        for(let prop in obj)\n        {\n            if (obj.hasOwnProperty(prop))\n            { \n                obj[prop].setAttribute('class', status);\n            }\n        }\n    }\n} ","import Todo from '../models/Todo';\nimport { isEmpty, setTableRowAttrs, setCheckboxAttrs } from '../lib/Utils';\nimport UIUtility from './UIUtility';\n\n/**\n * Class responsible for creating dynamic DOM elements:\n * todo list, alerts etc\n * ref: https://davidwalsh.name/documentfragment\n */\nexport default class UI extends UIUtility\n{\n\tconstructor(todos)\n\t{\n\t\tsuper()\n\n\t\t// init todos\n\t\tUI.todo = new Todo();\n\t\tUI.todos = UI.todo.all().sort( (a, b) => a.title.localeCompare(b.title) );\n\n\t\t// get div with id 'app' from index.html\n\t\tUI.appHook = document.getElementById(\"app\");\n\t\tUI.table = document.createElement(\"table\");\n\t\tUI.table.setAttribute(\"id\", \"list-items\");\n\n\t\tUI.iniFooter();\n\t}\n\n    static showTodos() \n    {\n\t\tif(!UI.todos) \n\t\t{\n\t\t\t/**\n\t\t\t * If no todos then show theres no todos:\n\t\t\t */\n\n\t\t\t// set notification variable\n\t\t\tconst preText = '<span>You have no todos yet :)</span>';\n\n\t\t\t// 1. create notification element - p tag\n\t\t\t// 2. set its attributes\n\t\t\t// 3. append to the parent element\n\t\t\t// 4. terminate script\n\t\t\tconst p = document.createElement(\"p\");\n\t\t\tp.setAttribute('id', 'pretext');\n\t\t\tp.innerHTML = preText;\n\t\t\tUI.appHook.appendChild(p);\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// iterate through each todo and \n\t\t//delegate DOM manipulation to showTodo()\n\t\tUI.todos.map(todo => UI.showTodo(todo));\n\t}\n\n\t/**\n\t * method responsible for creating new DOM nodes and \n\t * assigning todo values to list nodes.\n\t * @param {*} todo \n\t */\n    static showTodo(todo) \n    {\n\t\t// reset flag \n\t\tUI.resetFlag(todo)\n\t\t \n\t\t// update footer & its variables\n\t\tUI.iniFooter();\n\n\t\t// create html elems (tr, td, input, span, button)\n\t\tconst tr = document.createElement(\"tr\");\n\t\tconst td = document.createElement(\"td\");\n\t\tconst td1 = document.createElement(\"td\");\n\t\tconst td2 = document.createElement(\"td\");\n\t\tconst input = document.createElement(\"input\"); \n\t\tconst span = document.createElement(\"span\"); \n\t\tconst btn = document.createElement(\"button\"); \n\n\t\tif(todo.completed == true)\n\t\t{\n\t\t\t// check checkbox input if todo is completed\n\t\t\tinput.setAttribute('checked', 'checked');\n\n\t\t\t// apply a 'true' class\n\t\t\ttr.setAttribute('class', todo.completed);\n\t\t}\n\n\t\tinput.setAttribute('type', 'checkbox'); \n\t\tinput.setAttribute('class', 'checkbox');\n\t\tinput.setAttribute('value', todo.id);\n\n\t\tspan.setAttribute('class', 'todo-title');\n\t\tspan.setAttribute('id', todo.id);\n\t\tspan.innerHTML = todo.title;\n\n\t\tbtn.setAttribute('id', todo.id); \n\t\tbtn.setAttribute('class', 'delete');\n\t\tbtn.innerHTML = \"X\";\n\t\t\n\t\t//append children to tds\n\t\ttd.prepend(input);\n\t\ttd1.appendChild(span);\n\t\ttd2.appendChild(btn);\n\t\t\n\t\t// append tds to tr\n\t\ttr.appendChild(td);\n\t\ttr.appendChild(td1);\n\t\ttr.appendChild(td2);\n\n\t\t// append tr to table\n\t\tUI.table.appendChild(tr);\n\n\t\t// finally append table to main parent\n\t\tUI.appHook.appendChild(UI.table);\n\t}\n\n\tstatic toggleTodo(el)\n\t{\n\t\t// select only element(s) with 'checkbos' class attrs\n\t\tif(el.classList.contains('checkbox'))\n\t\t{\n\t\t\t// update completed property\n\t\t\tUI.todo.toggleCompleted(el.value);\n\t\t\t// update the UI\n\t\t\tel.parentElement.parentElement.classList.toggle(\"true\");\n\t\t}\n\t}\n\n\tstatic editTodo(el) \n\t{\n\t\t// if parent element has class of one of the \n\t\t// elements we're looking for in its class list\n\t\tif(el.classList.contains('todo-title'))\n\t\t{\n\t\t\t// prompt user to supply new title text\n\t\t\tconst newTitleText = prompt(\"Enter new todo title\");\n\n\t\t\t// ensure input is not empty\n\t\t\tif(isEmpty(newTitleText) == true) \n\t\t\t{\n\t\t\t\t// terminate script if input is empty\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise update db \n\t\t\t// then also update UI\n\t\t\tUI.todo.editTitle(el.id, newTitleText);\n\t\t\tel.innerHTML = newTitleText;\n\t\t}\n\t}\n\n\tstatic removeTodo(el) \n\t{\n\t\t// if parent element has class of one of the \n\t\t// elements we're looking for in its class list\n\t\tif(el.classList.contains('delete'))\n\t\t{\n\t\t\t// attempt to delete todo from DB\n\t\t\tUI.todo.delete(el.id);\n\n\t\t\t// update copy of in-memory todos to ensure we retain\n\t\t\t// consistency by removing the deleted todo from array\n\t\t\t// or returning all todos except for the just-deleted todo\n\t\t\t// then save rest back in todos array\n\t\t\tUI.todos = UI.todos.filter(todo => todo.id != el.id );\n\n\t\t\t// update the UI also\n\t\t\tel.parentElement.parentElement.remove();\n\n\t\t\t// ensure the stats on footer reflect this change\n\t\t\tUI.iniFooter();\n\t\t}\n\t}\n\n\tstatic checkAll(status)\n\t{\n\t\tconst tableRows = document.querySelector('#list-items').childNodes;\n\t\tconst checkBoxes = document.querySelectorAll('.checkbox');\n\n\t\tlet checked = (status===true) ? 'checked' : false;\n\n\t\tUI.setTableRowAttrs(tableRows, status, checked);\n\t\tUI.setCheckboxAttrs(checkBoxes, status, checked);\n\n\t\tUI.todos.map( todo => todo.completed = status );\n\t\tUI.todo.update(UI.todos);\n\t}\n\n\tstatic iniFooter()\n\t{\n\t\t// initialize variables\n\t\tconst checkAllElem = document.querySelector('#tick-untick-all');\n\t\tconst itemCount = document.querySelector('#item-count');\n\t\tconst instruction = document.querySelector('#instruction');\n\t\tconst instructionNote = '* double-click title to edit';\n\t\tconst todoCount = UI.todos.length;\n\t\t\n\t\t// set values if there are todos (item count & instruction note)\n\t\titemCount.childNodes[1].childNodes[0].innerHTML = UI.todos.length;\n\t\t\n\t\tif(todoCount > 0)\n\t\t{\n\t\t\tinstruction.childNodes[1].innerHTML = instructionNote;\n\t\t}\n\n\t\tUI.resetCheckAll(checkAllElem, UI.checkAllFlag);\n\t}\n\n\n\t/**\n\t * displays errors when called\n\t * @param {*} errorArray \n\t */\n\tstatic renderErrors(errorArray=[])\n\t{\n\t\t// ensure errorsAray is set\n\t\tif(errorArray.length === 0) \n\t\t{\n\t\t\t// stop script if array is empty. log message\n\t\t\treturn console.log('error array empty');\n\t\t}\n\n\t\t// hook to alerts section in index.html\n\t\tconst alerts = document.getElementById('display-alerts');\n\t\t\n\t\t// create a ul tag\n\t\tlet ul = document.createElement(\"ul\");\n\n\t\t// loop thru errors\n\t\terrorArray.forEach(error => {\n\t\t\t// create li element each time\n\t\t\tlet li = document.createElement(\"li\");\n\n\t\t\t// add error text to li element\n\t\t\tli.innerHTML = error;\n\n\t\t\t// append it immediately to the ul tag\n\t\t\tul.appendChild(li);\n\t\t});\n\n\t\t// append the ul tag to allerts div\n\t\talerts.appendChild(ul);\n\n\t\t// clear msgs after 5 secs\n\t\tsetTimeout(() => {\n\t\t\talerts.remove()\n\t\t}, 5000);\n\t}\n}\n","/**\n * Error handling class\n * contains errors class property\n * and get & set class methods\n */\n\nexport default class Errors \n{\n    constructor()\n    {\n        // initialize errors property to empty array\n        Errors.errors = [];\n    } \n\n    // returns errors array\n    static get()\n    {\n        return Errors.errors;\n    }\n\n    // sets values to errors property\n    static set(errMsg=null)\n    {\n        Errors.errors.push(errMsg);\n    }\n}","import Errors from './Errors';\n\n/**\n * NOTE: class subject to extention as theres \n * a lot of methods that could potentially be added\n * eg: email, password etc\n */\n\n /**\n  * Validation class validates any form input.\n  * call validate class method and pass it rules & \n  * form data. Any errors are routed to Errors class within\n  * its methods.\n  */\nexport default class Validation \n{\n    /**\n     * cycles through inputs array and returns TRUE/FALSE\n     * depending on whether there are errors or not\n     * @param {*} rules \n     * @param {*} data \n     * returns @bool depending on whether form is valid on not\n     */\n    static validate(rules, data) \n    {\n        // set valide to true unless something is wrong within data object\n        let valid = true;\n\n        // loop through rules first\n        rules.forEach((rule, index) => {\n\n            // extract rules into callback array.\n            let callbacks = rule.title.split('|');\n\n            // loop thru rules array\n            callbacks.forEach(callback => {\n\n                /**\n                 * extract input data and set value variable\n                 * extract keys from data object and set field name\n                 * variable\n                 */\n                let value = (data[index]) ? data[index] : null;\n                let fieldName = Object.keys(data[0])[0];\n\n                // dynamically call this class methods and pass value and field name.\n                if(Validation[callback](value, fieldName) === false) \n                { \n                    /**\n                     * if false ie nthere was a problem: no input value \n                     * or value infringes some rule then set form validity to false.\n                     */\n                    valid = false;\n                }\n                \n            });\n        });\n\n        // return whether form was valid or not\n        return valid;\n    }\n\n    /**\n     * Check if input has minimum character length\n     * @param {*} value \n     * @param {*} fieldName \n     * Returns @bool true/false \n     */\n    static min(value=null, fieldName)\n    {\n        // initialize validity\n        let valid = null;\n\n        // check if input is less that a certain minimum\n        if(Validation.lessThan(value._name) === true) \n        {\n            // if so set valid to false: input has less characters ...\n            // than required\n            valid = false;\n\n            // set error message to errors class\n            Errors.set(`${fieldName} must be more than 5 characters.`);\n        }  \n        else \n        {\n            // otherwise input has right number of characters\n            // set valid to true.\n            valid = true;\n        }\n\n        // return validity\n        return valid;\n    }\n\n    /**\n     * Check input for missing value: input MUST contain value\n     * @param {*} value \n     * @param {*} fieldName \n     * returns @bool true/false\n     */\n    static required(value=null, fieldName)\n    {\n        // initialize validity\n        let valid = null;\n\n        // check if input has empty string\n        if(Validation.empty(value._name) ===true) \n        {\n            // if so set validity to false: input is empty\n            valid = false;\n            \n            // set error message to errors class\n            Errors.set(`${fieldName} is reqired`);\n        } \n        else \n        {\n            // otherwise input is valid: set validity to true\n            valid = true;\n        }\n\n        // return valid\n        return valid;\n    }\n\n    /**\n     * check if field value is empty or not\n     * @param {*} field \n     * returns @bool true/false\n     */\n    static empty(field=null)\n    {\n        return (field ===null || field.trim().length===0) ? true : false;\n    }\n\n    /**\n     * checks if field has characters less or equal to 5:\n     * a minimum required for any input field\n     * @param {*} field \n     * returns @bool true/false\n     */\n    static lessThan(field=null)\n    {\n        return (field.length <= 5) ? true : false;\n    }\n\n}","import Todo from '../models/Todo';\nimport UI from '../components/UI';\nimport Validation from '../lib/Validation';\nimport Errors from '../lib/Errors';\n\n/**\n * handle button click\n * display errors if any\n * collect form input, and delegate validation\n *  delegate todo persistence\n */\nconst todoSubmit = () => {\n    \n    // query button tag\n    // const btn = document.getElementById(\"btn\");\n    const _input = document.getElementById(\"new-todo\");\n\n    // add event to button tag\n    _input.addEventListener(\"change\", (e) => {\n        \n        /** \n         * initialize variables \n         * **/\n\n        // set rules\n        const rules = [{ title: 'required|min' }];\n        // get input element\n        // const _input = document.getElementById(\"new-todo\");\n        // obtain input name\n        const _name = _input.name;\n        // obtain input value\n        const newTodo = _input.value;\n\n        /** Initialize errors object **/\n        new Errors();\n\n        // validate input, passing rules and input value.\n        if(Validation.validate(rules, [{ _name: newTodo }])===true)\n        {\n            const p = document.querySelector('#pretext');\n            /**\n             * If Validation passes then...\n             * initialize Todo object and save new Todo\n             * clear input UI\n             */\n            const todo = new Todo(newTodo);\n            todo.save();\n            (p) ? p.remove() : null;\n            UI.showTodo(todo);\n            _input.value = \"\";\n        } else {\n            /**\n             * Otherwise render errors on UI\n             */\n            UI.renderErrors(Errors.get());\n        }\n    });\n};\n\nconst toggleCompleted = () => {\n\n    const todoList = document.querySelector('#list-items');\n\n    if(todoList)\n    {\n        // add event to it plus its children (propgation)\n        todoList.addEventListener('click', (e) => {\n            /**\n             * delegate action to UI toggle action -\n             * passing the clicked element\n             */\n            UI.toggleTodo(e.target);\n        }, false);\n    }\n};\n\nconst editTodo = () => {\n\n    const todoList = document.querySelector('#list-items');\n\n    if(todoList)\n    {\n        todoList.addEventListener('dblclick', (e) => {\n            /**\n             * delegate action to UI edit action -\n             * passing the clicked element\n             */\n            UI.editTodo(e.target);\n        }, false);\n    }\n};\n\nconst removeTodo = () => {\n\n    // selectlist item wrapper\n    const todoList = document.querySelector('#list-items');\n    \n    if(todoList)\n    {\n        todoList.addEventListener('click', (e) => {\n            \n            UI.removeTodo(e.target);\n        }, false);\n    }\n};\n\nconst checkAll = () => {\n    const tickAll = document.querySelector('#tick-untick-all');\n    \n    tickAll.addEventListener('click', (e) => {\n        \n        UI.checkAll(e.target.checked);\n    });\n};\n\n\nexport { todoSubmit, toggleCompleted, editTodo, removeTodo, checkAll };","import UI from './components/UI';\nimport { todoSubmit, toggleCompleted, editTodo, removeTodo, checkAll } from './controllers/Actions';\n\n// display todos when DOM loads\nwindow.document.addEventListener(\"DOMContentLoaded\", function() {\n\n\t// initialize UI\n\tnew UI;\n\t\n\t//display data\n\tUI.showTodos();\n\n\t// handle events\n\ttodoSubmit();\n\ttoggleCompleted();\n\teditTodo();\n\tremoveTodo();\n\tcheckAll();\n});\n\n\n  "]}